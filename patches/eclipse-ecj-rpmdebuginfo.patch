--- plugins/org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java.orig	2006-02-07 13:50:13.000000000 -0500
+++ plugins/org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java	2006-02-07 13:55:29.000000000 -0500
@@ -2405,6 +2405,28 @@
 			this.times = new long[this.repetitions];
 			this.timesCounter = 0;
 		}
+                {
+                       // If we're building an RPM, force full debugging info to
+                       // be generated, no matter what options have been passed
+                       // by Ant.  This is something of a kludge, but it is far
+                       // better than the alternative, which is having class
+                       // files with debug info mysteriously missing.
+
+                       String RpmPackageName = System.getenv("RPM_PACKAGE_NAME");
+                       String RpmArch = System.getenv("RPM_ARCH");
+                       String RpmBuildRoot = System.getenv("RPM_BUILD_ROOT");
+                       if (RpmPackageName != null && RpmArch != null && RpmBuildRoot != null) {
+                               this.options.put(
+                                   CompilerOptions.OPTION_LocalVariableAttribute,
+                                   CompilerOptions.GENERATE);
+                               this.options.put(
+                                   CompilerOptions.OPTION_LineNumberAttribute,
+                                   CompilerOptions.GENERATE);
+                               this.options.put(
+                                   CompilerOptions.OPTION_SourceFileAttribute,
+                                   CompilerOptions.GENERATE);
+                       }
+                }
 	}
 
 	private void addNewEntry(final int InsideClasspath, final int InsideSourcepath, ArrayList bootclasspaths, ArrayList classpaths,ArrayList sourcepathClasspaths, String currentClasspathName, ArrayList currentRuleSpecs, int mode, String customEncoding) {
