### Eclipse Workspace Patch 1.0
#P org.eclipse.swt
Index: Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java
===================================================================
RCS file: /cvsroot/eclipse/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java,v
retrieving revision 1.175
diff -u -r1.175 GC.java
--- Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java	29 May 2009 21:30:25 -0000	1.175
+++ Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java	30 Nov 2009 20:07:38 -0000
@@ -2821,31 +2821,35 @@
 	data.device.checkCairo();
 	int /*long*/ cairo = data.cairo;
 	if (cairo != 0) return;
-	int /*long*/ xDisplay = OS.GDK_DISPLAY();
-	int /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());
-	int /*long*/ xDrawable = 0;
-	int translateX = 0, translateY = 0;
-	int /*long*/ drawable = data.drawable;
-	if (data.image != null) {
-		xDrawable = OS.GDK_PIXMAP_XID(drawable);
-	} else {
-		if (!data.realDrawable) {
-			int[] x = new int[1], y = new int[1];
-			int /*long*/ [] real_drawable = new int /*long*/ [1];
-			OS.gdk_window_get_internal_paint_info(drawable, real_drawable, x, y);
-			xDrawable = OS.gdk_x11_drawable_get_xid(real_drawable[0]);
-			translateX = -x[0];
-			translateY = -y[0];
+	if (OS.GTK_VERSION < OS.VERSION(2, 17, 0)) {
+		int /*long*/ xDisplay = OS.GDK_DISPLAY();
+		int /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());
+		int /*long*/ xDrawable = 0;
+		int translateX = 0, translateY = 0;
+		int /*long*/ drawable = data.drawable;
+		if (data.image != null) {
+			xDrawable = OS.GDK_PIXMAP_XID(drawable);
+		} else {
+			if (!data.realDrawable) {
+				int[] x = new int[1], y = new int[1];
+				int /*long*/ [] real_drawable = new int /*long*/ [1];
+				OS.gdk_window_get_internal_paint_info(drawable, real_drawable, x, y);
+				xDrawable = OS.gdk_x11_drawable_get_xid(real_drawable[0]);
+				translateX = -x[0];
+				translateY = -y[0];
+			}
 		}
+		int[] w = new int[1], h = new int[1];
+		OS.gdk_drawable_get_size(drawable, w, h);
+		int width = w[0], height = h[0];
+		int /*long*/ surface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width, height);
+		if (surface == 0) SWT.error(SWT.ERROR_NO_HANDLES);
+		Cairo.cairo_surface_set_device_offset(surface, translateX, translateY);
+		data.cairo = cairo = Cairo.cairo_create(surface);
+		Cairo.cairo_surface_destroy(surface);
+	} else {
+		data.cairo = cairo = OS.gdk_cairo_create(data.drawable);
 	}
-	int[] w = new int[1], h = new int[1];
-	OS.gdk_drawable_get_size(drawable, w, h);
-	int width = w[0], height = h[0];
-	int /*long*/ surface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width, height);
-	if (surface == 0) SWT.error(SWT.ERROR_NO_HANDLES);
-	Cairo.cairo_surface_set_device_offset(surface, translateX, translateY);
-	data.cairo = cairo = Cairo.cairo_create(surface);
-	Cairo.cairo_surface_destroy(surface);
 	if (cairo == 0) SWT.error(SWT.ERROR_NO_HANDLES);
 	data.disposeCairo = true;
 	Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);
